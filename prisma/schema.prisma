// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client"
  previewFeatures = ["relationJoins"]
  output          = "generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            String     @id @default(ulid())
  email         String     @unique
  name          String
  emailVerified Boolean
  image         String?
  role          String?
  banned        Boolean?
  banReason     String?
  banExpires    Int?
  createdAt     DateTime
  updatedAt     DateTime
  sessions      sessions[]
  accounts      accounts[]
}

model sessions {
  id             String   @id @default(ulid())
  expiresAt      DateTime
  token          String   @unique
  impersonatedBy String?
  createdAt      DateTime
  updatedAt      DateTime
  ipAddress      String?
  userAgent      String?
  userId         String
  user           users    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, token])
}

model accounts {
  id                    String    @id @default(ulid())
  accountId             String
  providerId            String
  userId                String
  user                  users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@index([userId])
}

model verifications {
  id         String    @id @default(ulid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@index([identifier])
}

model ExerciseLibrary {
  id              String           @id @default(ulid())
  title           String
  createdAt       DateTime
  updatedAt       DateTime
  exLibBodyParts  ExLibBodyPart[]
  exLibEquipments ExLibEquipment[]
  exLibRaks       ExLibRak[]
}

model BodyPart {
  id               String            @id @default(ulid())
  name             String
  createdAt        DateTime
  updatedAt        DateTime
  exLibBodyParts   ExLibBodyPart[]
  exSetupBodyParts ExSetupBodyPart[]
}

model Equipment {
  id                   String                @id @default(ulid())
  name                 String
  createdAt            DateTime
  updatedAt            DateTime
  exLibEquipments      ExLibEquipment[]
  exSetupEquipments    ExSetupEquipment[]
  demoCenterEquipments DemoCenterEquipment[]
}

model Rack {
  id          String       @id @default(ulid())
  name        String
  createdAt   DateTime
  updatedAt   DateTime
  exLibRaks   ExLibRak[]
  exSetupRaks ExSetupRak[]
}

model ExLibBodyPart {
  id          String          @id @default(ulid())
  exLibraryId String
  exLibrary   ExerciseLibrary @relation(fields: [exLibraryId], references: [id], onDelete: Cascade)
  bodyPartId  String
  bodyPart    BodyPart        @relation(fields: [bodyPartId], references: [id], onDelete: Cascade)
  createdAt   DateTime
  updatedAt   DateTime
}

model ExLibEquipment {
  id          String          @id @default(ulid())
  exLibraryId String
  exLibrary   ExerciseLibrary @relation(fields: [exLibraryId], references: [id], onDelete: Cascade)
  equipmentId String
  equipment   Equipment       @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
  createdAt   DateTime
  updatedAt   DateTime
}

model ExLibRak {
  id          String          @id @default(ulid())
  exLibraryId String
  exLibrary   ExerciseLibrary @relation(fields: [exLibraryId], references: [id], onDelete: Cascade)
  rackId      String
  rack        Rack            @relation(fields: [rackId], references: [id], onDelete: Cascade)
  createdAt   DateTime
  updatedAt   DateTime
}

model ExerciseSetup {
  id                String             @id @default(ulid())
  title             String
  createdAt         DateTime
  updatedAt         DateTime
  exSetupBodyParts  ExSetupBodyPart[]
  exSetupEquipments ExSetupEquipment[]
  exSetupRaks       ExSetupRak[]
}

model ExSetupBodyPart {
  id         String        @id @default(ulid())
  exSetupId  String
  exSetup    ExerciseSetup @relation(fields: [exSetupId], references: [id], onDelete: Cascade)
  bodyPartId String
  bodyPart   BodyPart      @relation(fields: [bodyPartId], references: [id], onDelete: Cascade)
  createdAt  DateTime
  updatedAt  DateTime
}

model ExSetupEquipment {
  id          String        @id @default(ulid())
  exSetupId   String
  exSetup     ExerciseSetup @relation(fields: [exSetupId], references: [id], onDelete: Cascade)
  equipmentId String
  equipment   Equipment     @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
  createdAt   DateTime
  updatedAt   DateTime
}

model ExSetupRak {
  id        String        @id @default(ulid())
  exSetupId String
  exSetup   ExerciseSetup @relation(fields: [exSetupId], references: [id], onDelete: Cascade)
  rackId    String
  rack      Rack          @relation(fields: [rackId], references: [id], onDelete: Cascade)
  createdAt DateTime
  updatedAt DateTime
}

model DemoCenter {
  id                   String                @id @default(ulid())
  name                 String
  address              String
  phone                String
  email                String
  website              String
  createdAt            DateTime
  updatedAt            DateTime
  demoCenterEquipments DemoCenterEquipment[]
}

model DemoCenterEquipment {
  id           String     @id @default(ulid())
  demoCenterId String
  demoCenter   DemoCenter @relation(fields: [demoCenterId], references: [id], onDelete: Cascade)
  equipmentId  String
  equipment    Equipment  @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
  createdAt    DateTime
  updatedAt    DateTime
}

// model exerciseLibrary {
//   id              String            @id @default(ulid())
//   title           String
//   createdAt       DateTime
//   updatedAt       DateTime
//   exLibBodyParts  exLibBodyParts[]
//   exLibEquipments exLibEquipments[]
//   exLibRaks       exLibRaks[]
// }

// model bodyParts {
//   id               String             @id @default(ulid())
//   name             String
//   createdAt        DateTime
//   updatedAt        DateTime
//   exLibBodyParts   exLibBodyParts[]
//   exSetupBodyParts exSetupBodyParts[]
// }

// model equipments {
//   id                   String                 @id @default(ulid())
//   name                 String
//   createdAt            DateTime
//   updatedAt            DateTime
//   exLibEquipments      exLibEquipments[]
//   exSetupEquipments    exSetupEquipments[]
//   demoCenterEquipments demoCenterEquipments[]
// }

// model raks {
//   id          String        @id @default(ulid())
//   name        String
//   createdAt   DateTime
//   updatedAt   DateTime
//   exLibRaks   exLibRaks[]
//   exSetupRaks exSetupRaks[]
// }

// // many to many relation between exerciseLibrary and bodyParts
// model exLibBodyParts {
//   id          String          @id @default(ulid())
//   exLibraryId String
//   exLibrary   exerciseLibrary @relation(fields: [exLibraryId], references: [id], onDelete: Cascade)
//   bodyPartId  String
//   bodyPart    bodyParts       @relation(fields: [bodyPartId], references: [id], onDelete: Cascade)
//   createdAt   DateTime
//   updatedAt   DateTime
// }

// // many to many relation between exerciseLibrary and equipments
// model exLibEquipments {
//   id          String          @id @default(ulid())
//   exLibraryId String
//   exLibrary   exerciseLibrary @relation(fields: [exLibraryId], references: [id], onDelete: Cascade)
//   equipmentId String
//   equipment   equipments      @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
//   createdAt   DateTime
//   updatedAt   DateTime
// }

// // many to many relation between exerciseLibrary and raks
// model exLibRaks {
//   id          String          @id @default(ulid())
//   exLibraryId String
//   exLibrary   exerciseLibrary @relation(fields: [exLibraryId], references: [id], onDelete: Cascade)
//   rakId       String
//   rak         raks            @relation(fields: [rakId], references: [id], onDelete: Cascade)
//   createdAt   DateTime
//   updatedAt   DateTime
// }

// model exerciseSetups {
//   id                String              @id @default(ulid())
//   title             String
//   createdAt         DateTime
//   updatedAt         DateTime
//   exSetupBodyParts  exSetupBodyParts[]
//   exSetupEquipments exSetupEquipments[]
//   exSetupRaks       exSetupRaks[]
// }

// // many to many relation between exerciseSetups and bodyParts
// model exSetupBodyParts {
//   id         String         @id @default(ulid())
//   exSetupId  String
//   exSetup    exerciseSetups @relation(fields: [exSetupId], references: [id], onDelete: Cascade)
//   bodyPartId String
//   bodyPart   bodyParts      @relation(fields: [bodyPartId], references: [id], onDelete: Cascade)
//   createdAt  DateTime
//   updatedAt  DateTime
// }

// // many to many relation between exerciseSetups and equipments
// model exSetupEquipments {
//   id          String         @id @default(ulid())
//   exSetupId   String
//   exSetup     exerciseSetups @relation(fields: [exSetupId], references: [id], onDelete: Cascade)
//   equipmentId String
//   equipment   equipments     @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
//   createdAt   DateTime
//   updatedAt   DateTime
// }

// // many to many relation between exerciseSetups and raks
// model exSetupRaks {
//   id        String         @id @default(ulid())
//   exSetupId String
//   exSetup   exerciseSetups @relation(fields: [exSetupId], references: [id], onDelete: Cascade)
//   rakId     String
//   rak       raks           @relation(fields: [rakId], references: [id], onDelete: Cascade)
//   createdAt DateTime
//   updatedAt DateTime
// }

// model demoCenters {
//   id                   String                 @id @default(ulid())
//   name                 String
//   address              String
//   phone                String
//   email                String
//   website              String
//   createdAt            DateTime
//   updatedAt            DateTime
//   demoCenterEquipments demoCenterEquipments[]
// }

// model demoCenterEquipments {
//   id           String      @id @default(ulid())
//   demoCenterId String
//   demoCenter   demoCenters @relation(fields: [demoCenterId], references: [id], onDelete: Cascade)
//   equipmentId  String
//   equipment    equipments  @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
//   createdAt    DateTime
//   updatedAt    DateTime
// }
